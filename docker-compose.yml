version: '3.7'
services:
  nginx-gin-rest:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-gin-rest
    hostname: nginx-gin-rest
    ports:
      - 8080:80
    depends_on:
      - ${API_NAME}
    networks:
      - gin-rest-network

  postgres-gin-rest:
    image: postgres:16.0-alpine
    container_name: postgres-gin-rest
    hostname: postgres-gin-rest
    restart: always
    environment:
      POSTGRES_USER: api_user
      POSTGRES_PASSWORD: api_pass
      POSTGRES_DB: api_gin_rest_db
    ports:
      - 5432:5432
    volumes:
      - ./docker_conf/postgres-data:/var/lib/postgresql/data  
    networks:
      - gin-rest-network

  redis-gin-rest:
    container_name: redis-gin-rest
    hostname: redis-gin-rest
    image: redis:6.2-alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass admin
    volumes:
      - ./docker_conf/redis/data/:/data
    networks:
      - gin-rest-network

  rabbitmq-gin-rest:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-gin-rest
    hostname: rabbitmq-gin-rest
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - 15672:15672
    volumes:
      - ./docker_conf/rabbitmq/data/:/var/lib/rabbitmq
      - ./docker_conf/rabbitmq/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    networks:
      - gin-rest-network

  gatling-api-test:
    build:
      context: ./tests/gatling
      dockerfile: Dockerfile
    container_name: gatling-api-test
    hostname: gatling-api-test
    env_file: 
      - .env
    ports:
      - "${GATLING_TEST_PORT}:${GATLING_TEST_PORT}"
    depends_on:
      - ${API_NAME}
    volumes:
      - ./tests/gatling:/usr/src/app
    networks:
      - gin-rest-network

  api-gin-rest:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    container_name: ${API_NAME}
    hostname: ${API_NAME}
    environment:
      DATABASE_HOST: postgres-gin-rest
      RABBITMQ_HOST: rabbitmq-gin-rest
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - postgres-gin-rest
      - redis-gin-rest
      - rabbitmq-gin-rest
    volumes:
      - .:/usr/src/app
    tty: true
    command: go run cmd/api/main.go -b 0.0.0.0
    networks:
      - gin-rest-network

  worker-gin:
#    deploy:
#      replicas: 1
    container_name: worker-gin
    hostname: worker-gin
    build:
      context: .
      dockerfile: Dockerfile
      target: worker
    environment:
      DATABASE_HOST: postgres-gin-rest
      RABBITMQ_HOST: rabbitmq-gin-rest
    depends_on:
      - postgres-gin-rest
      - redis-gin-rest
      - rabbitmq-gin-rest
    volumes:
      - .:/usr/src/app
    tty: true
    command: go run cmd/worker/main.go -b 0.0.0.0
    networks:
      - gin-rest-network

networks:
  gin-rest-network:
    driver: bridge
